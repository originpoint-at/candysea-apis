syntax = "proto3";

package io.candysea.candymint.v1;

import "candymint/v1/collection.proto";
import "candymint/v1/nft.proto";
import "candymint/v1/public_collection.proto";
import "candymint/v1/release.proto";
import "candymint/v1/repo_tag.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/originpoint-at/candysea-apis/candymint/v1";
option java_multiple_files = true;
option java_package = "io.candysea.candymint.v1";

service CandyMintService {
  rpc ListPublicCollections(ListPublicCollectionsRequset) returns (ListPublicCollectionsResponse) {}
  rpc LoginWithWallet(LoginWithWalletRequest) returns (LoginWithWalletResponse) {}
  rpc CreateCollection(CreateCollectionRequest) returns (Collection) {}
  rpc GetCollection(GetCollectionRequest) returns (Collection) {}
  rpc ListRepoTags(ListRepoTagsRequest) returns (ListRepoTagsResponse) {}
  rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse) {}
  rpc UpdateCollection(UpdateCollectionRequest) returns (Collection) {}
  rpc SyncCollectionOnChainData(SyncCollectionOnChainDataRequest) returns (Collection) {}
  rpc CreateRelease(CreateReleaseRequest) returns (Release) {}
  rpc ListReleases(ListReleasesRequest) returns (ListReleasesResponse) {}
  rpc ListNFTs(ListNFTsRequest) returns (ListNFTsResponse) {}
  rpc GetNFT(GetNFTRequest) returns (Nft) {}
}

message ListPublicCollectionsRequset {
  enum Channel {
    CHANNEL_UNSPECIFIED = 0;
    TOP_MINTED = 1;
  }
  Channel channel = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message ListPublicCollectionsResponse {
  repeated PublicCollection public_collections = 1;
  int32 total = 2;
}

message LoginWithWalletRequest {
  string address = 1;
  string signature = 2;
  string message = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message LoginWithWalletResponse {
  string access_token = 1;

  reserved 2;
  reserved "refresh_token";
}

message CreateCollectionRequest {
  string chain_id = 1;
  string display_name = 2;
  string description = 3;
  // the HTTPS URI of the GitHub repository
  string github_repo_uri = 4;
  // TOOD: consider using OAuth2 instead
  string github_access_token = 5;
  Collection.Type type = 6;
}

message GetCollectionRequest {
  string collection_name = 1;
}

message ListRepoTagsRequest {
  string collection_id = 1;
  string collection_name = 2;
}

message ListRepoTagsResponse {
  repeated io.candysea.candymint.v1.RepoTag tags = 1;
}

message ListCollectionsRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message ListCollectionsResponse {
  repeated Collection collections = 1;
  int32 total = 2;
}

message UpdateCollectionRequest {
  string collection_id = 1;
  string display_name = 2;
  string description = 3;
  string cover_file_id = 4;
  string github_repo_uri = 5;
  string github_access_token = 6;
}

message SyncCollectionOnChainDataRequest {
  string collection_id = 1;
  string chain_id = 2;
  string nft_name = 3;
  string nft_symbol = 4;
  string contract_address = 5;
  int64 single_price = 6;
  int32 max_supply = 7;
  string transaction_hash = 8;
}

message CreateReleaseRequest {
  string collection_id = 1;
  string tag = 2;
  string description = 3;
}

message ListReleasesRequest {
  string collection_id = 1;
  string collection_name = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message ListReleasesResponse {
  repeated Release releases = 1;
  int32 total = 2;
}

message ListNFTsRequest {
  string collection_name = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message ListNFTsResponse {
  repeated Nft nfts = 1;
  int32 total = 2;
}

message GetNFTRequest {
  string collection_id = 1;
  string collection_name = 2;
  string token_id = 3;
}
